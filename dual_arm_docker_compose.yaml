services:
  dual_arm_rosmaster:
    image: ros:melodic
    container_name: dual_arm_airo_rosmaster
    command: stdbuf -o L roscore
    network_mode: host
    environment:
      - ROS_MASTER_URI=http://10.20.0.5:11311
      - ROS_IP=10.20.0.5
      # - ROS_IP=178.172.42.25
  dual_arm_airo:
    # image: osrf/ros:humble-desktop-full
    image: airo_mono_rbs_venv:latest
    container_name: dual_arm_airo_mono_rbs_venv
    # image: airo_mono_rbs:latest
    # container_name: airo_mono_rbs
    stdin_open: true  # equivalent to `-i`
    tty: true         # equivalent to `-t`
    entrypoint: /ros_entrypoint.sh
    command: bash
    network_mode: host  # Use host network
    runtime: nvidia
    environment:
      - DISPLAY=${DISPLAY}  # Forward the X11 display
      - QT_X11_NO_MITSHM=1  # Prevent issues with shared memory in some cases
      - NVIDIA_VISIBLE_DEVICES=all  # Expose all GPUs to the container
      # - NVIDIA_DRIVER_CAPABILITIES=compute,utility,video,graphics  # Enable all relevant GPU capabilities
      - NVIDIA_DRIVER_CAPABILITIES=all  # Enable all relevant GPU capabilities
      - ROS_LOCALHOST_ONLY=1
      - QT_SCALE_FACTOR=1
      - ROS_MASTER_URI=http://10.20.0.5:11311
      - ROS_IP=10.20.0.5
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix  # X11 socket for display forwarding
      - /dev/dri:/dev/dri  # Direct rendering access to the GPU
      - /home/peter/airo_rbs/airo_rbs_ws:/airo_ws/airo_rbs_ws:rw
    devices:
      - /dev/video0:/dev/video0 # camera acces
      - /dev/video1:/dev/video1 # camera acces
    privileged: true
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all  # Reserve all available GPUs for the container
              capabilities: [gpu]  # Enable GPU capabilities
